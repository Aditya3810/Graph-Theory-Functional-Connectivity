## This provides an overview of scripting the CONN-Toolbox for Matlab.
# The code is inspired by the code provided in Andy's Brain Book.
# Why should you script instead of using the GUI?
# Firstly, when it comes to fMRI analyses, it could lead to mismatching of T1 files and also number of runs to analyze also increases. 
# Secondly, since we have used a very large dataset comprising of a total of 90 subjects, the approach to use GUI is impractical.

# Code: (MATLAB)

# Loading the files:
NSUBJECTS=90;
cwd=pwd;
FUNCTIONAL_FILE=cellstr(conn_dir('sub-0-_MR_Resting_State_fMRI_br_raw_20101022214816087_11_S93651_I199148.dcm')); % I have chosen to go with dcm files but using MRIcroGL_windows you can convert it to the format .nii and nii.gz formats respectively.
STRUCTURAL_FILE=cellstr(conn_dir('sub-0-MR_MPRAGE_br_raw_20101022214818268_128_S93650_I199147.dcm'));
if rem(length(FUNCTIONAL_FILE),NSUBJECTS),error('mismatch number of functional files %n', length(FUNCTIONAL_FILE));end
if rem(length(STRUCTURAL_FILE),NSUBJECTS),error('mismatch number of anatomical files %n', length(FUNCTIONAL_FILE));end
nsessions=length(FUNCTIONAL_FILE)/NSUBJECTS;
FUNCTIONAL_FILE=reshape(FUNCTIONAL_FILE,[NSUBJECTS,nsessions]);
STRUCTURAL_FILE={STRUCTURAL_FILE{1:NSUBJECTS}};
disp([num2str(size(FUNCTIONAL_FILE,1)),' subjects']);
disp([num2str(size(FUNCTIONAL_FILE,2)),' sessions']);
TR=3.10; % Repetition time

## Now we run the pre-processing, and denoising steps.

%% Prepares batch structure
clear batch;
batch.filename=fullfile(cwd,'EMCIMCI.mat');            % We create a new *mat file

%% SETUP & PREPROCESSING step ()
% CONN Setup                                            % Default options for functional connectivity, for graph theory analysis, we use the gui in itself
% CONN Setup.preprocessing                               (realignment/coregistration/segmentation/normalization/smoothing)
batch.Setup.isnew=1;
batch.Setup.nsubjects=NSUBJECTS;
batch.Setup.RT=TR;                                        % TR (seconds)
batch.Setup.functionals=repmat({{}},[NSUBJECTS,1]);       % functional volumes for each subject/session
for nsub=1:NSUBJECTS,for nses=1:nsessions,batch.Setup.functionals{nsub}{nses}{1}=FUNCTIONAL_FILE{nsub,nses}; end; end %note: each subject's data is defined by three sessions and one single (4d) file per session
batch.Setup.structurals=STRUCTURAL_FILE;                  % anatomical volumes for each subject
nconditions=nsessions;                                  % treats each session as a different condition (we have also analysed between session differences, but if not needed, you can comment the next 3 lines below.
if nconditions==1
    batch.Setup.conditions.names={'rest'};
    for ncond=1,for nsub=1:NSUBJECTS,for nses=1:nsessions,              batch.Setup.conditions.onsets{ncond}{nsub}{nses}=0; batch.Setup.conditions.durations{ncond}{nsub}{nses}=inf;end;end;end     % rest condition (all sessions)
else
    batch.Setup.conditions.names=[{'rest'}, arrayfun(@(n)sprintf('Session%d',n),1:nconditions,'uni',0)];
    for ncond=1,for nsub=1:NSUBJECTS,for nses=1:nsessions,              batch.Setup.conditions.onsets{ncond}{nsub}{nses}=0; batch.Setup.conditions.durations{ncond}{nsub}{nses}=inf;end;end;end     % rest condition (all sessions)
    for ncond=1:nconditions,for nsub=1:NSUBJECTS,for nses=1:nsessions,  batch.Setup.conditions.onsets{1+ncond}{nsub}{nses}=[];batch.Setup.conditions.durations{1+ncond}{nsub}{nses}=[]; end;end;end
    for ncond=1:nconditions,for nsub=1:NSUBJECTS,for nses=ncond,        batch.Setup.conditions.onsets{1+ncond}{nsub}{nses}=0; batch.Setup.conditions.durations{1+ncond}{nsub}{nses}=inf;end;end;end % session-specific conditions
end
batch.Setup.preprocessing.steps='default_mni'; % You can also upload your own atlas here. I have decided to go with the standard Montreal Neurologic Institute (MNI) space
# batch.Setup.preprocessing.sliceorder='interleaved (Siemens)'; % I have skipped this step as the scans were obtained from various systems. Skipping this step makes no significant difference.
batch.Setup.done=1;
batch.Setup.overwrite='Yes';

%% DENOISING step
% CONN Denoising                                    % Utilised the component-based noise correction method (COMPCOR)
batch.Denoising.filter=[0.01, 0.1];                 % frequency filter (band-pass values, in Hz)
batch.Denoising.done=1;
batch.Denoising.overwrite='Yes';

## And the next step would be running the batch from your command line.
conn_batch(batch);

## These three lines will open the CONN GUI and automatically load the second-level results.
conn
conn('load',fullfile(cwd,'Arithmetic_Scripted.mat'));
conn gui_results
